.container {
    display: grid;
    grid-template-columns: calc(24rem / 16) auto calc(24rem / 16);
    grid-template-rows: repeat(3, auto);
    padding: 0.25em;
    margin-bottom: 1rem;

    &:where(.radio) {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }
}

.icon {
    grid-row: 2 / 3;
    grid-column: 3 / 4;
    display: flex;
    align-items: center;
    justify-content: center;
    width: calc(24rem / 16);
    pointer-events: none;

    &:where(.left) {
        grid-column: 1 / 2;
    }

    >svg {
        width: 1rem;
        height: 1rem;
        color: light-dark(var(--color-gray-12), var(--color-gray-1));
    }
}

:is(label, .label) {
    grid-column: 1 / 4;
    grid-row: 1 / 2;
    color: light-dark(var(--color-gray-9), var(--color-gray-1));
    font-weight: 800;
    cursor: pointer;
    font-size: var(--font-size-sm);
    margin-bottom: 0.25em;
}

.input-container {
    display: grid;
    grid-template-rows: subgrid;
    grid-row: 2 / 3;
    grid-column: 1 /4;
    border: 1px solid light-dark(var(--color-gray-9), var(--color-gray-1));
    padding: 0.2em;
    border-radius: 0.25em;

    &:has(input[type="radio"]) {
        border: none;
        display: flex;
        flex-direction: column;
        gap: var(--spacing-sm);
    }
}

input:not([type="radio"]),
select {
    min-height: calc(24rem / 16);
    border: none;
}

.container:has(.icon) input:not([type="radio"]) {
    padding-right: calc(24rem / 16 + 2rem);
}

.container:has(.icon.left) input:not([type="radio"]) {
    padding-left: calc(10rem / 16 + 1rem);
    padding-right: 0.5em;
}

:where(.input, select):focus {
    outline: none;
}

.input-container:has(:where(.input, select):focus) {
    outline: 2px solid light-dark(var(--color-gray-9), var(--color-gray-1));
}